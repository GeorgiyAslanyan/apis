import React, { useState } from 'react';
import { motion } from 'framer-motion';
import TypedTextOne from './TypedTextOnce';

const Roadmap = () => {
  const [isFirstOpen, setIsFirstOpen] = useState(false);
  const [isSecondOpen, setIsSecondOpen] = useState(false);
  const [isThirdOpen, setIsThirdOpen] = useState(false);
  const [isFourOpen, setIsFourOpen] = useState(false);

  // Варианты анимации для изменения высоты
  const variants = {
    open: { height: 'auto', opacity: 1 },
    closed: { height: 0, opacity: 0 },
  };

  return (
    <section className="py-16 px-4 rounded-xl flex flex-col z-[2]" id="roadmap">
      <h2 className="text-3xl sm:text-5xl font-semibold text-center mb-14 z-[2]">
        <TypedTextOne text={"Roadmap //"} />
      </h2>
      <div className="grid grid-cols-1 sm:grid-cols-2 xl:grid-cols-4 gap-3 transition-all ease-linear duration-100">
        {[
          {
            phase: 'Phase I (Q1 2025)',
            title: 'Public Demonstration of Efficiency',
            description: <>Launching a trading account on ByBIT with a $20,000 capital <br />
              Integration with the Telegram bot for publishing real-time trading alerts and reports <br />
              Demonstrating the bot’s effectiveness during one month of public trading <br />
              Developing a community management bot that guarantees access to a private Telegram group exclusively for verified holders, preserving exclusivity, without the need for wallet signature verification
            </>,
          },
          {
            phase: 'Phase II (Q1 2025)',
            title: 'Launch a Utility Token',
            description: <>Deployment of the aiAPIS token on the Ethereum chain <br />
              Creation of a community trading account on ByBIT, where 30% of all taxes will be allocated to fund the account
            </>,
          }, {
            phase: 'Phase III (Q1 2025)',
            title: 'Community and Revenue Sharing',
            description: <>
              Launching a staking program that enables token holders to stake their tokens and earn passive income from the profits generated by an trading bot <br />
              Trading using the community account, with profits distributed among token holders participating in staking
            </>,
          }, {
            phase: 'Phase IV (Q2 - Q3 2025)',
            title: 'Expanding the Ecosystem',
            description: <>
              Providing holders with access to aiAPIS via an API protocol, enabling them to connect their personal account on ByBIT with permissions limited to trading on behalf of the owner, without authorization for fund withdrawals <br />
              Integration of enhanced community account management and reporting features <br />
              Scaling to other centralized exchanges for trading and expanding trading pairs <br />
              Improving AI algorithms to increase trading efficiency and market data analysis <br />
              Launch of additional services and tools for community members
            </>,
          },
        ].map((phase, index) => (
          <motion.div
            key={index}
            className="relative bg-[#0D1327] overflow-hidden min-h-[240px] h-fit p-6 rounded-xl shadow-lg flex flex-col justify-between z-[2]"
            initial={{ opacity: 0, scale: 0.5 }}
            whileInView={{ opacity: 1, scale: 1 }}
            viewport={{ once: true }}
            transition={{
              duration: 0.3,
              delay: index * 0.3,
              type: "spring",
              stiffness: 20,
              damping: 10,
            }}
          >
            {index === 0 && (
              <>
                <p className='mb-4 font-medium opacity-50'>{phase.phase}</p>
                <h3 className="font-semibold text-2xl mb-2">{phase.title}</h3>
                <motion.div
                  className="overflow-hidden"
                  initial="closed"
                  animate={isFirstOpen ? "open" : "closed"}
                  variants={variants}
                  transition={{ duration: 0.3 }}
                >
                  <p className='font-medium opacity-50'>{phase.description}</p>
                </motion.div>
                <button
                  onClick={() => setIsFirstOpen(!isFirstOpen)}
                  className={`${isFirstOpen ? "rotate-180" : "rotate-0"} transition-all ease-linear duration-100 bg-[#00000050] rounded-full absolute right-2 bottom-2 flex items-center justify-center leading-none w-7 h-7`}
                >
                  <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" strokeWidth="1.5" stroke="currentColor" className="size-4">
                    <path strokeLinecap="round" strokeLinejoin="round" d="m19.5 8.25-7.5 7.5-7.5-7.5" />
                  </svg>
                </button>
              </>
            )}
            {index === 1 && (
              <>
                <h3 className="font-semibold text-2xl mb-2">{phase.title}</h3>
                <motion.div
                  className="overflow-hidden"
                  initial="closed"
                  animate={isSecondOpen ? "open" : "closed"}
                  variants={variants}
                  transition={{ duration: 0.3 }}
                >
                  <p className='font-medium opacity-50'>{phase.description}</p>
                </motion.div>
                <p className='mt-4 font-medium opacity-50'>{phase.phase}</p>
                <button
                  onClick={() => setIsSecondOpen(!isSecondOpen)}
                  className={`${isSecondOpen ? "rotate-180" : "rotate-0"} transition-all ease-linear duration-100 bg-[#00000050] rounded-full absolute right-2 bottom-2 flex items-center justify-center leading-none w-7 h-7`}
                >
                  <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" strokeWidth="1.5" stroke="currentColor" className="size-4">
                    <path strokeLinecap="round" strokeLinejoin="round" d="m19.5 8.25-7.5 7.5-7.5-7.5" />
                  </svg>
                </button>
              </>
            )}
            {index === 2 && (
              <>
                <p className='mb-4 font-medium opacity-50'>{phase.phase}</p>
                <h3 className="font-semibold text-2xl mb-2">{phase.title}</h3>
                <motion.div
                  className="overflow-hidden"
                  initial="closed"
                  animate={isThirdOpen ? "open" : "closed"}
                  variants={variants}
                  transition={{ duration: 0.3 }}
                >
                  <p className='font-medium opacity-50'>{phase.description}</p>
                </motion.div>
                <button
                  onClick={() => setIsThirdOpen(!isThirdOpen)}
                  className={`${isThirdOpen ? "rotate-180" : "rotate-0"} transition-all ease-linear duration-100 bg-[#00000050] rounded-full absolute right-2 bottom-2 flex items-center justify-center leading-none w-7 h-7`}
                >
                  <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" strokeWidth="1.5" stroke="currentColor" className="size-4">
                    <path strokeLinecap="round" strokeLinejoin="round" d="m19.5 8.25-7.5 7.5-7.5-7.5" />
                  </svg>
                </button>
              </>
            )}
            {index === 3 && (
              <>
                <h3 className="font-semibold text-2xl mb-2">{phase.title}</h3>
                <motion.div
                  className="overflow-hidden"
                  initial="closed"
                  animate={isFourOpen ? "open" : "closed"}
                  variants={variants}
                  transition={{ duration: 0.3 }}
                >
                  <p className='font-medium opacity-50'>{phase.description}</p>
                </motion.div>
                <p className='mt-4 font-medium opacity-50'>{phase.phase}</p>
                <button
                  onClick={() => setIsFourOpen(!isFourOpen)}
                  className={`${isFourOpen ? "rotate-180" : "rotate-0"} transition-all ease-linear duration-100 bg-[#00000050] rounded-full absolute right-2 bottom-2 flex items-center justify-center leading-none w-7 h-7`}
                >
                  <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" strokeWidth="1.5" stroke="currentColor" className="size-4">
                    <path strokeLinecap="round" strokeLinejoin="round" d="m19.5 8.25-7.5 7.5-7.5-7.5" />
                  </svg>
                </button>
              </>
            )}
          </motion.div>
        ))}
      </div>
    </section>
  );
};

export default Roadmap;